/*
 * Skytils - Hypixel Skyblock Quality of Life Mod
 * Copyright (C) 2021 Skytils
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    ext.kotlin_version = "1.5.0-RC"

    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven { url "https://maven.minecraftforge.net/" }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "com.github.Skytils:ForgeGradle:581a86dcbe"
        classpath "com.github.Skytils:mixingradle:d75e32e743"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = "1.0-pre1"
group = "skytils.skytilsmod"
archivesBaseName = "Skytils"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += "-Dfml.coreMods.load=skytils.skytilsmod.tweaker.FMLLoadingPlugin"
    clientRunArgs += "--mixin mixins.skytils.json"
}

repositories {
    jcenter()
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url "https://repo.sk1er.club/repository/maven-public/" }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile "com.mod-buildcraft:buildcraft:6.0.8:dev"  // adds buildcraft to the dev env
    //compile "com.googlecode.efficient-java-matrix-library:ejml:0.24" // adds ejml to the dev env

    // the "provided" configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // the deobf configurations:  "deobfCompile" and "deobfProvided" are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile "com.mod-buildcraft:buildcraft:6.0.8:dev"
    //deobfProvided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
        exclude module: "log4j-core"
    }

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")

    implementation("club.sk1er:Vigilance:99-10809-SNAPSHOT") {
        exclude module: "kotlin-reflect"
        exclude module: "kotlin-stdlib-jdk8"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

jar {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest.attributes(
            "Main-Class": "SkytilsInstallerFrame",
            "FMLCorePlugin": "skytils.skytilsmod.tweaker.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.skytils.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )

    enabled = false
}

shadowJar {
    archiveName = jar.archiveName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    relocate("club.sk1er", "skytils.sk1er")

    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"
    exclude "club/sk1er/vigilance/example"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude '**/*.kotlin_metadata'
    exclude '**/*.kotlin_module'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.skytils.refmap.json"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
        mappingType = "SEARGE"
    }
}

sourceSets {
    main {
        //ext.refMap = "mixins.skytils.refmap.json"
    }
}

tasks.reobfJar.dependsOn(shadowJar)